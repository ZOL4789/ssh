<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!--加载db.properties文件-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 定义dbcp数据源 Start-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!-- 指定JDBC驱动类 -->
        <property name="driverClassName" value="${jdbc.driver}">
        </property>
        <!-- 提供连接数据库的URL地址 -->
        <property name="url" value="${jdbc.url}">
        </property>
        <!-- 提供连接数据库的用户名和密码 -->
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!-- 定义dbcp数据源 End-->

    <!-- 定义SessionFactory Bean Start-->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" destroy-method="destroy">
        <!-- 为LocalSessionFactoryBean(AnnotationSessionFactoryBean)注入定义好的数据源 -->
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
<!--        <property name="mappingResources">-->
<!--            <list>-->
<!--                <value>mapper/User.hbm.xml</value>-->
<!--            </list>-->
<!--        </property>-->
        <!-- 添加Hibernate配置参数 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQLDialect
                </prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">false</prop>
            </props>
        </property>

    </bean>
    <!-- 定义SessionFactory Bean End-->


    <!-- 定义事务管理器 Start-->
    <bean id="txManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- 定义事务属性,声明事务规则 -->
        <tx:attributes>
            <tx:method name="find*" read-only="true" />
            <tx:method name="search*" read-only="true" />
            <tx:method name="query*" read-only="true" />
            <tx:method name="get*" read-only="true" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="register" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="do*" propagation="REQUIRED" />
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!-- 定义事务管理器 End-->

    <!--配置切面 Start-->
    <aop:config>
        <!-- 定义切入点 -->
        <aop:pointcut id="serviceMethod"
                      expression="execution(* com.zol.ssh.service.*.*(..))" />
        <!-- 将事务通知与切入点组合 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
    </aop:config>
    <!--配置切面 Start-->


    <!--配置Struts有关变量-->
    <!-- DAO层 Start -->
    <bean id="userDao" class="com.zol.ssh.dao.impl.UserDAOImpl">
<!--        <property name="sessionFactory" ref="sessionFactory"/>-->
    </bean>
    <!-- DAO层 End -->
    <!-- Service层 Start-->
    <bean id="userService" class="com.zol.ssh.service.impl.UserServiceImpl">
        <property name="userDAO" ref="userDao"/>
    </bean>
    <!-- Service层 End-->

    <!-- 控制层 (id为struts.xml中的class) 以下每个bean必须都要增加scope="prototype"属性 Start-->
    <bean id="userAction" class="com.zol.ssh.action.TestAction" scope="prototype">
        <property name="userService" ref="userService"></property>
    </bean>

    <!-- 控制层 End-->
</beans>